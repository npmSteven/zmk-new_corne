#include <input/processors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        esc_ctrl: esc_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_CTRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "qwerty";
            bindings = <
&kp TAB                 &kp Q  &kp W  &kp E  &kp R          &kp T                                    &kp UP                &kp Y      &kp U      &kp I      &kp O    &kp P     &kp MINUS
&esc_ctrl LCTRL ESCAPE  &kp A  &kp S  &kp D  &kp F          &kp G                          &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT          &kp Z  &kp X  &kp C  &kp V          &kp B             &kp SPACE              &kp DOWN              &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                      &mo 1  &kp BACKSPACE  &kp LEFT_COMMAND                                               &kp ENTER  &kp SPACE  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "numbers/nav";
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &kp C_VOLUME_UP                &kp N6    &kp N7    &kp N8  &kp N9     &kp N0            &kp TILDE
&trans     &trans  &trans  &trans  &trans  &trans            &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &trans  &trans  &trans  &trans  &trans  &trans                    &kp C_VOLUME_DOWN              &trans    &trans    &trans  &trans     &trans            &trans
                           &trans  &trans  &trans                                                           &trans    &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        upper_layer {
            bindings = <
&trans  &kp F1           &kp F2      &kp F3  &kp F4  &kp F5                    &trans          &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp PRINTSCREEN  &kp K_LOCK  &trans  &trans  &trans            &trans  &trans  &trans  &out OUT_TOG  &trans  &trans  &trans  &trans   &trans
&trans  &kp GRAVE        &kp PIPE    &trans  &trans  &trans  &trans            &trans          &trans        &trans  &trans  &trans  &trans   &trans
                                     &trans  &trans  &trans                                    &trans        &trans  &trans
            >;

            label = "func";
        };
    };
};
